######################################################################
#   BEEEP !
######################################################################

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    #SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    #SET_PIN PIN=BEEPER_pin VALUE=0


######################################################################
#  HOME if needed
######################################################################

[gcode_macro HOME]
# Only home if needed.
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28
    {% endif %}


######################################################################
#  PURGE nozzle
######################################################################

[gcode_macro PURGE]
gcode:
  M117 Purge ...
  G90                              ; absolu
  G21                              ; millimetre
  G92 E0                            ; reset extruder
  M220 S100                        ; Reset Speed factor override percentage to default (100%)
  M221 S100                        ; Reset Extrude factor override percentage to default (100%)
  #
  G1 X0 Y0   Z2.0  E0 F3600         ; on part du coin avant gauche + 2mm
  G1 X0 Y0   Z2    E1 F500          ; amorce 1mm
  G1 X0 Y1   Z1.0  E2 F500          ; 
  G1 X0 Y3   Z1.0  E3 F500          ; 
  G1 X0 Y5   Z0.4  E4 F500          ; 
  G1 Y0 Y7   Z.40  E6               ; 
  #
  G1 X0 Y10  Z0.24 E8  F5000 		;Move to start position
  G1 X0 Y250 Z0.24 E24 F1200 		;Draw the first line
  G1 X1 Y250 Z0.24     F1000	    ;Move to side a little
  G1 X1 Y150 Z0.24 E30 F1200 		;Draw the second line
  G1 X1 Y50  Z0.24 E34 F1200 		;Draw the second line
  # retraction 1mm (40-1) 
  G1 E33 F2400
  # lift jusqu'a 10mm
  G1 Z10 F500
  G92 E0                            ; reset extruder
  M117


######################################################################
#  BEGIN macro
######################################################################

[gcode_macro BEGIN_PRINT]
description: BEGIN new print
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(50)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
  START_PRINT BED_TEMP={BED_TEMP} EXTRUDER_TEMP={EXTRUDER_TEMP}

[gcode_macro START_PRINT]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(50)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
  
  # Preheat
  M117 Preheat {EXTRUDER_TEMP}°/{BED_TEMP}° ...
  M104 S180                        ; preheat hotend nowait 180 (no ooze)
  #
  G92 E0                           ; reset extruder
  M220 S100                        ; Reset Speed factor override percentage to default (100%)
  M221 S100                        ; Reset Extrude factor override percentage to default (100%)
  G90                              ; absolu
  G21                              ; millimetre
  M107                             ; start fan off
  # Reset the G-Code Z offset (adjust Z offset if needed)
  SET_GCODE_OFFSET Z=0.0
  # 
  # Home X Y Z
  G28 X Y Z
  
  # preheat bed 
  M140 S{BED_TEMP}                 ; preheat bed nowait         

  #  home
  G0 X1 Y1 Z5 F5000              ; 
  #
  # wait for the hotend
  M117 Heating {EXTRUDER_TEMP}°/{BED_TEMP}°...
  M190 S{BED_TEMP}
  M109 S{EXTRUDER_TEMP}
  
  # re-home Z
  # mesh
  G28 Z
  BED_MESH_CALIBRATE PROFILE="bluer" ADAPTIVE=1
  #
  # Load bed mesh
  BED_MESH_PROFILE LOAD=bluer     ; enable bed leveling 
  #
  PURGE

######################################################################  
[gcode_macro _START_PRINT_OLD]
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
  # Preheat
  M117 Preheat {EXTRUDER_TEMP}°/{BED_TEMP}° ...
  M104 S180                        ; preheat hotend nowait 180 (no ooze)
  M140 S{BED_TEMP}                 ; preheat bed nowait         
  #
  G92 E0                           ; reset extruder
  M220 S100                        ; Reset Speed factor override percentage to default (100%)
  M221 S100                        ; Reset Extrude factor override percentage to default (100%)
  G90                              ; absolu
  G21                              ; millimetre
  M107                             ; start fan off
  # 
  # Home X Y 
  G28 X Y
  #
  # wait for bed
  {% if printer.heater_bed.temperature < params.BED_TEMP|float*0.80 %}
      M117 Bed Heating {BED_TEMP}° ...
      M190 S{BED_TEMP}
  {% endif %}# Wait for bed to reach temperature
  #
  # Home Z (once bed at temp / z offset)
  G28 Z

  # Reset the G-Code Z offset (adjust Z offset if needed)
  #SET_GCODE_OFFSET Z=0.0

  #
  # mesh
  BED_MESH_CALIBRATE PROFILE="bluer" ADAPTIVE=1

  #  home
  G0 X1 Y1 Z5 F5000              ; 
  #
  # wait for the hotend
  M117 Hot End Heating {EXTRUDER_TEMP}° ...
  M109 S{EXTRUDER_TEMP}
  #
  # Load bed mesh
  BED_MESH_PROFILE LOAD=bluer     ; bed leveling 
  #
  PURGE

#####################################################################
#   G29 - bed calibration
######################################################################

[gcode_macro G29]
# pour imiter Marlin
description: BED mesh calibration
gcode:
  {% set G29_BED_TEMP = params.BED_TEMP|default(50)|float %}
  {% set G29_EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(170)|float %}
  #
  M117 Level Bed ...

  {% if printer.heater_bed.temperature < G29_BED_TEMP-5 %}
    M117 Level Bed ... {G29_EXTRUDER_TEMP}°
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={G29_BED_TEMP}        ; set HB temp wait 
  {% endif %}# Wait for bed to reach temperature
  #
  M117 Level Bed ... {G29_EXTRUDER_TEMP}°/{G29_BED_TEMP}°
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={G29_EXTRUDER_TEMP}           ; set HE temp nowait
  HOME
  BED_MESH_CALIBRATE METHOD=automatic ADAPTIVE=1
  G0 X0.1 Y0.1 Z20 F6000
  BED_MESH_PROFILE SAVE=bluer
  M117


######################################################################
#  END macro
######################################################################

[gcode_macro STOP_PRINT]
description: END print sequence
gcode:
  END_PRINT

[gcode_macro END_PRINT]
gcode:
  M117 Print complete :)
  G92 E0                           ; reset extruder
  M104 S0                          ; eteint bed et hotend
  M140 S0
  G91                              ; relative positioning
  G1 E-2 F2400                     ; retraction 1mm
  G0 Z+20 F2400                    ; raise 20mm
  G90                              ; absolu
  G0 X150 Y240 F3600               ; on se place au milieu arriere du bed
  ## cool down hotend
  M117 Cool Down ...
  TURN_OFF_HEATERS
  SET_VELOCITY_LIMIT ACCEL=1500    ; on reset l'acceleration
  G92 E0                           ; reset extruder
  M84                              ; disable stepper
  ;
  BED_MESH_CLEAR
  M117

######################################################################
#  PREHEAT
######################################################################

[gcode_macro Temp_PLA ]
description: Preheat 220/60
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}
    M117 Preheat PLA  ... {EXTRUDER_TEMP}°/{BED_TEMP}°
    M104 S{EXTRUDER_TEMP}
    M140 S{BED_TEMP}

[gcode_macro Temp_PETG ]
description: Preheat 235/70
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(70)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(235)|float %}
    M117 Preheat PETG 220°/60° ...
    M104 S{EXTRUDER_TEMP}
    M140 S{BED_TEMP}

######################################################################
# SPEED TEST - Ellis's guide
######################################################################

# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATION={printer.configfile.settings.printer.minimum_cruise_ratio}

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

######################################################################
#  Misc. M204 - M205 / Cura
######################################################################

[gcode_macro M205]
# ignore M205 Set Advanced Settings [B<µs>] [E<jerk>] [J<deviation>] [S<units/s>] [T<units/s>] [X<jerk>] [Y<jerk>] [Z<jerk>]
gcode:
  G4 P0
  #{% if 'X' in params %}
  #  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  #{% elif 'Y' in params %}
  #  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  #{% endif %}

######################################################################
# Filament Change, Pause & co
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[pause_resume]

[gcode_macro M600]
description: M600 Filament Change
gcode:
    {% set pX = params.X|default(100)|float %}
    {% set pY = params.Y|default(10)|float %}
    {% set pZ = params.Z|default(50)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE X=10 Y=10 Z_MIN=50
    G91                       ; relatif
    G1 E-.8 F2400             ; retract
    G1 Z{pZ}                   ; lift Z (relatif)
    G90                       ; absolu
    G1 X{pX} Y{pY} F3000        ; park front
    G91
    G1 E-75 F1000             ; unload : retract 75mm
    RESTORE_GCODE_STATE NAME=M600_state

##### Macros pour KlipperScreen

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=load_state
    M300 # beep
    G91
    G92 E0
    G1 E100 F360    # fast-load 100mm
    G1 E10 F100     # slow load 10mm
    M300
    M300
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro FILAMENT_LOAD]
gcode:
  LOAD_FILAMENT

[gcode_macro UNLOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=unload_state
    G91
    M300 # beep
    G92 E0
    G1 E10 F120      # slow extrude 10mm
    G1 E-100 F500    # fast-unload 100mm
    M300
    M300
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro FILAMENT_UNLOAD]
gcode:
  UNLOAD_FILAMENT


######################################################################
# Override M117 command with rawparams
######################################################################

# The macro below will override the default M117 command to echo the message.
#
# It uses the rawparams pseudo-variable that contains the full unparsed
# parameters that was passed to the M117 command.
#
# As this can include comments, we are trimming the text when a `;` or `#` is
# found, and escaping any existing `"`

[gcode_macro M117]
rename_existing: M117.1
gcode:
  {% if rawparams %}
    {% set escaped_msg = rawparams.split(';', 1)[0].split('\x23', 1)[0]|replace('"', '\\"') %}
    SET_DISPLAY_TEXT MSG="{escaped_msg}"
    RESPOND TYPE=command MSG="{escaped_msg}"
  {% else %}
    SET_DISPLAY_TEXT
  {% endif %}


#####################################################################
# LIFT 40 (pratique si not homed)
######################################################################

[gcode_macro Z_PLUS_40]
description: Force Move Z UP 30mm
gcode:
  FORCE_MOVE STEPPER=stepper_z DISTANCE=40 VELOCITY=10


#####################################################################
# M109 Wait for HOTEND Temperature
######################################################################

[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}


#####################################################################
# M190 Wait for BED Temperature
######################################################################

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s-2} MAXIMUM={s+2}  ; Wait for bed temp (within 1 degree)
    {% endif %}


######################################################################
# Cancel object (aka Marlin/RRF M486 commands) support
######################################################################

#
# Enable object exclusion
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

######################################################################
[gcode_macro TIMELAPSE_TAKE_FRAME]
gcode:
  G4 P0

